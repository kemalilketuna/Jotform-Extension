---
alwaysApply: true
---

# Browser Extension Development Guidelines

## Extension Configuration (WXT Framework)
- **WXT Config**: Use `wxt.config.ts` for all extension configuration
- **Manifest**: WXT automatically generates manifest files for different browsers
- **Minimal permissions**: Request minimal permissions in wxt.config.ts manifest section
- **CSP**: Configure Content Security Policy in wxt.config.ts
- **Modules**: Use WXT modules like @wxt-dev/module-react for React integration

## WXT Auto-Imports & APIs
- **Use WXT auto-imports** for browser APIs - no need for webextension-polyfill import in most cases
- **Proper message passing** between background, content, and popup scripts
- **Handle navigation** and dynamic content loading
- **Cross-browser testing** with manifest v3/v2 compatibility

## Communication & Storage
- **Message Passing**: Use proper message passing between background, content, and popup scripts
- **Storage**: Use browser.storage.sync for user preferences, browser.storage.local for cache
- **Event Handling**: Implement proper cleanup for event listeners
- **Navigation**: Handle page navigation and dynamic content loading

## Cross-browser Compatibility
- Use `webextension-polyfill` for API consistency across browsers
- Avoid browser-specific APIs unless absolutely necessary
- **Cross-browser testing** with manifest v3/v2 compatibility
- Validate all inter-script communications

## Content Script Best Practices
- **Minimize content script impact** on page performance
- **Use efficient DOM querying** strategies
- **Use requestIdleCallback** for non-critical operations
- **Implement proper cleanup** in useEffect for content scripts

## WXT Framework Patterns
- Use WXT auto-imports for browser APIs
- Proper message passing between scripts
- Minimal permissions in wxt.config.ts
- Handle navigation and dynamic content

## Extension Entrypoints
- `src/entrypoints/background.ts` - Background script with proper event handling
- `src/entrypoints/content.ts` - Content script with minimal page impact
- `src/entrypoints/popup/` - Popup interface with React integration

## Manifest Configuration
- Use wxt.config.ts for manifest configuration
- Request minimal permissions required for functionality
- Configure CSP for security compliance
- Handle manifest v3/v2 compatibility automatically through WXT

## Performance Optimization
- Minimize content script bundle size
- Use code splitting for popup components
- Implement lazy loading where appropriate
- Optimize for extension startup time