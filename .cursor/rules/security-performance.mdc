---
alwaysApply: true
---

# Security & Performance Guidelines

## Security Considerations
- **Sanitize all inputs** and AI-generated content
- **Use CSP-compliant code** - avoid inline styles and scripts
- **Validate DOM targets** before manipulation
- **Implement rate limiting** for automation actions
- **Secure storage** for sensitive data
- **Validate inter-script communications**
- **Privacy-respecting logging** system

## Input Validation & Sanitization
- Sanitize all user inputs and AI-generated content
- Validate all DOM manipulation targets before action
- Prevent XPath and CSS selector injection
- Use secure storage for sensitive user data

## Performance & Reliability
- **Minimize content script impact** on page performance
- **Use requestIdleCallback** for non-critical operations
- **Efficient DOM querying** strategies
- **Proper cleanup** for event listeners
- **Handle navigation** and dynamic content loading

## Content Script Optimization
- Minimize content script impact on page performance
- Use efficient DOM querying strategies
- Implement proper cleanup for event listeners
- Use requestIdleCallback for non-critical operations

## Privacy & Data Protection
- **Privacy-respecting logging** system that doesn't expose sensitive data
- **Secure storage** for sensitive user data
- **Transparent data usage** policies
- **Maintain privacy** while improving AI performance
- Never log or expose secrets and keys

## Rate Limiting & Safety
- Implement rate limiting for automation actions
- Safety guards against infinite loops
- Validate all automation targets before execution
- Implement proper error boundaries

## Cross-Browser Security
- Use webextension-polyfill for consistent API access
- Validate browser API availability before use
- Handle manifest v3/v2 compatibility securely
- Test security measures across all target browsers

## Critical Security Rules
- Never introduce code that exposes or logs secrets and keys
- Never commit secrets or keys to the repository
- Always follow security best practices
- Sanitize all inputs before DOM injection