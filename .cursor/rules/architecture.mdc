---
alwaysApply: true
---

# Project Architecture & Tech Stack

## Project Overview
You are developing a cross-browser extension using TypeScript and React that emulates user input through AI agents for site automation.

## Core Technologies
- **TypeScript**: Strict type checking, use latest ES features
- **React**: For popup UI and content script components
- **Tailwind CSS**: Use Tailwind CSS for all styling needs
- **Webpack/Vite**: For bundling with proper browser extension configuration
- **Web Extensions API**: Use the standardized WebExtensions API for maximum compatibility

## Browser Compatibility
- Primary targets: Chrome, Firefox, Safari, Edge
- Use `webextension-polyfill` for API consistency across browsers
- Avoid browser-specific APIs unless absolutely necessary
- Test manifest v3 compatibility (Chrome/Edge) and v2 fallbacks (Firefox/Safari)

## Directory Structure
```
src/
├── background/          # Background scripts
├── content/            # Content scripts
├── popup/              # Extension popup UI
├── options/            # Options page
├── components/         # Shared React components
├── utils/              # Utility functions
├── types/              # TypeScript type definitions
├── ai/                 # AI agent logic
└── automation/         # User input emulation
```

## Key Files
- `manifest.json` (v3 preferred, v2 fallback)
- `background.ts` - Service worker/background page
- `content.ts` - Content script injection
- `popup.tsx` - Extension popup interface